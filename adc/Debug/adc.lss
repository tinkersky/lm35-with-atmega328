
adc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000438  000004ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000438  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009f3  00000000  00000000  00000588  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000885  00000000  00000000  00000f7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000404  00000000  00000000  00001800  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000bc  00000000  00000000  00001c04  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040f  00000000  00000000  00001cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000227  00000000  00000000  000020cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000022f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e3       	ldi	r30, 0x38	; 56
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  8e:	0c 94 1a 02 	jmp	0x434	; 0x434 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <ADC_Read>:
	ADMUX = (1<<REFS0);
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
}

uint16_t ADC_Read(uint8_t ch){
	ADCSRA = 0x8F;   // 10001111
  96:	ea e7       	ldi	r30, 0x7A	; 122
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	8f e8       	ldi	r24, 0x8F	; 143
  9c:	80 83       	st	Z, r24
	ADMUX = 0xE0;    // 11100000
  9e:	80 ee       	ldi	r24, 0xE0	; 224
  a0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA |= 1<<ADSC;
  a4:	80 81       	ld	r24, Z
  a6:	80 64       	ori	r24, 0x40	; 64
  a8:	80 83       	st	Z, r24

	return ADCH;
  aa:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	08 95       	ret

000000b2 <main>:

int main(void)
{
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	1f 92       	push	r1
  b8:	cd b7       	in	r28, 0x3d	; 61
  ba:	de b7       	in	r29, 0x3e	; 62
	UART_Init();
  bc:	0e 94 8a 00 	call	0x114	; 0x114 <UART_Init>
	
	while (1)
	{
		uint16_t adc_value = ADC_Read(0)*0.4882;
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	0e 94 4b 00 	call	0x96	; 0x96 <ADC_Read>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
  c6:	bc 01       	movw	r22, r24
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <__floatunsisf>
  d0:	2a e5       	ldi	r18, 0x5A	; 90
  d2:	35 ef       	ldi	r19, 0xF5	; 245
  d4:	49 ef       	ldi	r20, 0xF9	; 249
  d6:	5e e3       	ldi	r21, 0x3E	; 62
  d8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <__mulsf3>
  dc:	0e 94 bb 00 	call	0x176	; 0x176 <__fixunssfsi>
  e0:	dc 01       	movw	r26, r24
  e2:	cb 01       	movw	r24, r22
  e4:	4a e0       	ldi	r20, 0x0A	; 10
  e6:	be 01       	movw	r22, r28
  e8:	6f 5f       	subi	r22, 0xFF	; 255
  ea:	7f 4f       	sbci	r23, 0xFF	; 255
  ec:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__itoa_ncheck>
		char val[1];
		itoa(adc_value,val,10);
		UART_TxString(val);
  f0:	ce 01       	movw	r24, r28
  f2:	01 96       	adiw	r24, 0x01	; 1
  f4:	0e 94 9c 00 	call	0x138	; 0x138 <UART_TxString>
		UART_TxString("\r\n");
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	0e 94 9c 00 	call	0x138	; 0x138 <UART_TxString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	83 ed       	ldi	r24, 0xD3	; 211
 104:	90 e3       	ldi	r25, 0x30	; 48
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x54>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x5e>
 110:	00 00       	nop
 112:	d6 cf       	rjmp	.-84     	; 0xc0 <main+0xe>

00000114 <UART_Init>:
}

char UART_RxChar(){
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
 114:	87 e6       	ldi	r24, 0x67	; 103
 116:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 11a:	88 e1       	ldi	r24, 0x18	; 24
 11c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 120:	86 e0       	ldi	r24, 0x06	; 6
 122:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 126:	08 95       	ret

00000128 <UART_TxChar>:
 128:	e0 ec       	ldi	r30, 0xC0	; 192
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	90 81       	ld	r25, Z
 12e:	95 ff       	sbrs	r25, 5
 130:	fd cf       	rjmp	.-6      	; 0x12c <UART_TxChar+0x4>
 132:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 136:	08 95       	ret

00000138 <UART_TxString>:

void UART_TxString(char text[]){
 138:	0f 93       	push	r16
 13a:	1f 93       	push	r17
 13c:	cf 93       	push	r28
 13e:	df 93       	push	r29
 140:	fc 01       	movw	r30, r24
	int i=0;
	
	while(i<255){
		if (text[i] == '\0') break;
 142:	80 81       	ld	r24, Z
 144:	81 11       	cpse	r24, r1
 146:	0a c0       	rjmp	.+20     	; 0x15c <UART_TxString+0x24>
 148:	11 c0       	rjmp	.+34     	; 0x16c <UART_TxString+0x34>
 14a:	89 91       	ld	r24, Y+
 14c:	88 23       	and	r24, r24
 14e:	71 f0       	breq	.+28     	; 0x16c <UART_TxString+0x34>
		UART_TxChar(text[i]);
 150:	0e 94 94 00 	call	0x128	; 0x128 <UART_TxChar>
}

void UART_TxString(char text[]){
	int i=0;
	
	while(i<255){
 154:	0c 17       	cp	r16, r28
 156:	1d 07       	cpc	r17, r29
 158:	c1 f7       	brne	.-16     	; 0x14a <UART_TxString+0x12>
 15a:	08 c0       	rjmp	.+16     	; 0x16c <UART_TxString+0x34>
 15c:	8f 01       	movw	r16, r30
		if (text[i] == '\0') break;
		UART_TxChar(text[i]);
 15e:	0e 94 94 00 	call	0x128	; 0x128 <UART_TxChar>
 162:	e8 01       	movw	r28, r16
 164:	21 96       	adiw	r28, 0x01	; 1
 166:	01 50       	subi	r16, 0x01	; 1
 168:	1f 4f       	sbci	r17, 0xFF	; 255
 16a:	ef cf       	rjmp	.-34     	; 0x14a <UART_TxString+0x12>
		i++;
	}
 16c:	df 91       	pop	r29
 16e:	cf 91       	pop	r28
 170:	1f 91       	pop	r17
 172:	0f 91       	pop	r16
 174:	08 95       	ret

00000176 <__fixunssfsi>:
 176:	0e 94 2f 01 	call	0x25e	; 0x25e <__fp_splitA>
 17a:	88 f0       	brcs	.+34     	; 0x19e <__fixunssfsi+0x28>
 17c:	9f 57       	subi	r25, 0x7F	; 127
 17e:	98 f0       	brcs	.+38     	; 0x1a6 <__fixunssfsi+0x30>
 180:	b9 2f       	mov	r27, r25
 182:	99 27       	eor	r25, r25
 184:	b7 51       	subi	r27, 0x17	; 23
 186:	b0 f0       	brcs	.+44     	; 0x1b4 <__fixunssfsi+0x3e>
 188:	e1 f0       	breq	.+56     	; 0x1c2 <__fixunssfsi+0x4c>
 18a:	66 0f       	add	r22, r22
 18c:	77 1f       	adc	r23, r23
 18e:	88 1f       	adc	r24, r24
 190:	99 1f       	adc	r25, r25
 192:	1a f0       	brmi	.+6      	; 0x19a <__fixunssfsi+0x24>
 194:	ba 95       	dec	r27
 196:	c9 f7       	brne	.-14     	; 0x18a <__fixunssfsi+0x14>
 198:	14 c0       	rjmp	.+40     	; 0x1c2 <__fixunssfsi+0x4c>
 19a:	b1 30       	cpi	r27, 0x01	; 1
 19c:	91 f0       	breq	.+36     	; 0x1c2 <__fixunssfsi+0x4c>
 19e:	0e 94 49 01 	call	0x292	; 0x292 <__fp_zero>
 1a2:	b1 e0       	ldi	r27, 0x01	; 1
 1a4:	08 95       	ret
 1a6:	0c 94 49 01 	jmp	0x292	; 0x292 <__fp_zero>
 1aa:	67 2f       	mov	r22, r23
 1ac:	78 2f       	mov	r23, r24
 1ae:	88 27       	eor	r24, r24
 1b0:	b8 5f       	subi	r27, 0xF8	; 248
 1b2:	39 f0       	breq	.+14     	; 0x1c2 <__fixunssfsi+0x4c>
 1b4:	b9 3f       	cpi	r27, 0xF9	; 249
 1b6:	cc f3       	brlt	.-14     	; 0x1aa <__fixunssfsi+0x34>
 1b8:	86 95       	lsr	r24
 1ba:	77 95       	ror	r23
 1bc:	67 95       	ror	r22
 1be:	b3 95       	inc	r27
 1c0:	d9 f7       	brne	.-10     	; 0x1b8 <__fixunssfsi+0x42>
 1c2:	3e f4       	brtc	.+14     	; 0x1d2 <__fixunssfsi+0x5c>
 1c4:	90 95       	com	r25
 1c6:	80 95       	com	r24
 1c8:	70 95       	com	r23
 1ca:	61 95       	neg	r22
 1cc:	7f 4f       	sbci	r23, 0xFF	; 255
 1ce:	8f 4f       	sbci	r24, 0xFF	; 255
 1d0:	9f 4f       	sbci	r25, 0xFF	; 255
 1d2:	08 95       	ret

000001d4 <__floatunsisf>:
 1d4:	e8 94       	clt
 1d6:	09 c0       	rjmp	.+18     	; 0x1ea <__floatsisf+0x12>

000001d8 <__floatsisf>:
 1d8:	97 fb       	bst	r25, 7
 1da:	3e f4       	brtc	.+14     	; 0x1ea <__floatsisf+0x12>
 1dc:	90 95       	com	r25
 1de:	80 95       	com	r24
 1e0:	70 95       	com	r23
 1e2:	61 95       	neg	r22
 1e4:	7f 4f       	sbci	r23, 0xFF	; 255
 1e6:	8f 4f       	sbci	r24, 0xFF	; 255
 1e8:	9f 4f       	sbci	r25, 0xFF	; 255
 1ea:	99 23       	and	r25, r25
 1ec:	a9 f0       	breq	.+42     	; 0x218 <__floatsisf+0x40>
 1ee:	f9 2f       	mov	r31, r25
 1f0:	96 e9       	ldi	r25, 0x96	; 150
 1f2:	bb 27       	eor	r27, r27
 1f4:	93 95       	inc	r25
 1f6:	f6 95       	lsr	r31
 1f8:	87 95       	ror	r24
 1fa:	77 95       	ror	r23
 1fc:	67 95       	ror	r22
 1fe:	b7 95       	ror	r27
 200:	f1 11       	cpse	r31, r1
 202:	f8 cf       	rjmp	.-16     	; 0x1f4 <__floatsisf+0x1c>
 204:	fa f4       	brpl	.+62     	; 0x244 <__floatsisf+0x6c>
 206:	bb 0f       	add	r27, r27
 208:	11 f4       	brne	.+4      	; 0x20e <__floatsisf+0x36>
 20a:	60 ff       	sbrs	r22, 0
 20c:	1b c0       	rjmp	.+54     	; 0x244 <__floatsisf+0x6c>
 20e:	6f 5f       	subi	r22, 0xFF	; 255
 210:	7f 4f       	sbci	r23, 0xFF	; 255
 212:	8f 4f       	sbci	r24, 0xFF	; 255
 214:	9f 4f       	sbci	r25, 0xFF	; 255
 216:	16 c0       	rjmp	.+44     	; 0x244 <__floatsisf+0x6c>
 218:	88 23       	and	r24, r24
 21a:	11 f0       	breq	.+4      	; 0x220 <__floatsisf+0x48>
 21c:	96 e9       	ldi	r25, 0x96	; 150
 21e:	11 c0       	rjmp	.+34     	; 0x242 <__floatsisf+0x6a>
 220:	77 23       	and	r23, r23
 222:	21 f0       	breq	.+8      	; 0x22c <__floatsisf+0x54>
 224:	9e e8       	ldi	r25, 0x8E	; 142
 226:	87 2f       	mov	r24, r23
 228:	76 2f       	mov	r23, r22
 22a:	05 c0       	rjmp	.+10     	; 0x236 <__floatsisf+0x5e>
 22c:	66 23       	and	r22, r22
 22e:	71 f0       	breq	.+28     	; 0x24c <__floatsisf+0x74>
 230:	96 e8       	ldi	r25, 0x86	; 134
 232:	86 2f       	mov	r24, r22
 234:	70 e0       	ldi	r23, 0x00	; 0
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	2a f0       	brmi	.+10     	; 0x244 <__floatsisf+0x6c>
 23a:	9a 95       	dec	r25
 23c:	66 0f       	add	r22, r22
 23e:	77 1f       	adc	r23, r23
 240:	88 1f       	adc	r24, r24
 242:	da f7       	brpl	.-10     	; 0x23a <__floatsisf+0x62>
 244:	88 0f       	add	r24, r24
 246:	96 95       	lsr	r25
 248:	87 95       	ror	r24
 24a:	97 f9       	bld	r25, 7
 24c:	08 95       	ret

0000024e <__fp_split3>:
 24e:	57 fd       	sbrc	r21, 7
 250:	90 58       	subi	r25, 0x80	; 128
 252:	44 0f       	add	r20, r20
 254:	55 1f       	adc	r21, r21
 256:	59 f0       	breq	.+22     	; 0x26e <__fp_splitA+0x10>
 258:	5f 3f       	cpi	r21, 0xFF	; 255
 25a:	71 f0       	breq	.+28     	; 0x278 <__fp_splitA+0x1a>
 25c:	47 95       	ror	r20

0000025e <__fp_splitA>:
 25e:	88 0f       	add	r24, r24
 260:	97 fb       	bst	r25, 7
 262:	99 1f       	adc	r25, r25
 264:	61 f0       	breq	.+24     	; 0x27e <__fp_splitA+0x20>
 266:	9f 3f       	cpi	r25, 0xFF	; 255
 268:	79 f0       	breq	.+30     	; 0x288 <__fp_splitA+0x2a>
 26a:	87 95       	ror	r24
 26c:	08 95       	ret
 26e:	12 16       	cp	r1, r18
 270:	13 06       	cpc	r1, r19
 272:	14 06       	cpc	r1, r20
 274:	55 1f       	adc	r21, r21
 276:	f2 cf       	rjmp	.-28     	; 0x25c <__fp_split3+0xe>
 278:	46 95       	lsr	r20
 27a:	f1 df       	rcall	.-30     	; 0x25e <__fp_splitA>
 27c:	08 c0       	rjmp	.+16     	; 0x28e <__fp_splitA+0x30>
 27e:	16 16       	cp	r1, r22
 280:	17 06       	cpc	r1, r23
 282:	18 06       	cpc	r1, r24
 284:	99 1f       	adc	r25, r25
 286:	f1 cf       	rjmp	.-30     	; 0x26a <__fp_splitA+0xc>
 288:	86 95       	lsr	r24
 28a:	71 05       	cpc	r23, r1
 28c:	61 05       	cpc	r22, r1
 28e:	08 94       	sec
 290:	08 95       	ret

00000292 <__fp_zero>:
 292:	e8 94       	clt

00000294 <__fp_szero>:
 294:	bb 27       	eor	r27, r27
 296:	66 27       	eor	r22, r22
 298:	77 27       	eor	r23, r23
 29a:	cb 01       	movw	r24, r22
 29c:	97 f9       	bld	r25, 7
 29e:	08 95       	ret

000002a0 <__mulsf3>:
 2a0:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__mulsf3x>
 2a4:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__fp_round>
 2a8:	0e 94 c6 01 	call	0x38c	; 0x38c <__fp_pscA>
 2ac:	38 f0       	brcs	.+14     	; 0x2bc <__mulsf3+0x1c>
 2ae:	0e 94 cd 01 	call	0x39a	; 0x39a <__fp_pscB>
 2b2:	20 f0       	brcs	.+8      	; 0x2bc <__mulsf3+0x1c>
 2b4:	95 23       	and	r25, r21
 2b6:	11 f0       	breq	.+4      	; 0x2bc <__mulsf3+0x1c>
 2b8:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__fp_inf>
 2bc:	0c 94 c3 01 	jmp	0x386	; 0x386 <__fp_nan>
 2c0:	11 24       	eor	r1, r1
 2c2:	0c 94 4a 01 	jmp	0x294	; 0x294 <__fp_szero>

000002c6 <__mulsf3x>:
 2c6:	0e 94 27 01 	call	0x24e	; 0x24e <__fp_split3>
 2ca:	70 f3       	brcs	.-36     	; 0x2a8 <__mulsf3+0x8>

000002cc <__mulsf3_pse>:
 2cc:	95 9f       	mul	r25, r21
 2ce:	c1 f3       	breq	.-16     	; 0x2c0 <__mulsf3+0x20>
 2d0:	95 0f       	add	r25, r21
 2d2:	50 e0       	ldi	r21, 0x00	; 0
 2d4:	55 1f       	adc	r21, r21
 2d6:	62 9f       	mul	r22, r18
 2d8:	f0 01       	movw	r30, r0
 2da:	72 9f       	mul	r23, r18
 2dc:	bb 27       	eor	r27, r27
 2de:	f0 0d       	add	r31, r0
 2e0:	b1 1d       	adc	r27, r1
 2e2:	63 9f       	mul	r22, r19
 2e4:	aa 27       	eor	r26, r26
 2e6:	f0 0d       	add	r31, r0
 2e8:	b1 1d       	adc	r27, r1
 2ea:	aa 1f       	adc	r26, r26
 2ec:	64 9f       	mul	r22, r20
 2ee:	66 27       	eor	r22, r22
 2f0:	b0 0d       	add	r27, r0
 2f2:	a1 1d       	adc	r26, r1
 2f4:	66 1f       	adc	r22, r22
 2f6:	82 9f       	mul	r24, r18
 2f8:	22 27       	eor	r18, r18
 2fa:	b0 0d       	add	r27, r0
 2fc:	a1 1d       	adc	r26, r1
 2fe:	62 1f       	adc	r22, r18
 300:	73 9f       	mul	r23, r19
 302:	b0 0d       	add	r27, r0
 304:	a1 1d       	adc	r26, r1
 306:	62 1f       	adc	r22, r18
 308:	83 9f       	mul	r24, r19
 30a:	a0 0d       	add	r26, r0
 30c:	61 1d       	adc	r22, r1
 30e:	22 1f       	adc	r18, r18
 310:	74 9f       	mul	r23, r20
 312:	33 27       	eor	r19, r19
 314:	a0 0d       	add	r26, r0
 316:	61 1d       	adc	r22, r1
 318:	23 1f       	adc	r18, r19
 31a:	84 9f       	mul	r24, r20
 31c:	60 0d       	add	r22, r0
 31e:	21 1d       	adc	r18, r1
 320:	82 2f       	mov	r24, r18
 322:	76 2f       	mov	r23, r22
 324:	6a 2f       	mov	r22, r26
 326:	11 24       	eor	r1, r1
 328:	9f 57       	subi	r25, 0x7F	; 127
 32a:	50 40       	sbci	r21, 0x00	; 0
 32c:	9a f0       	brmi	.+38     	; 0x354 <__mulsf3_pse+0x88>
 32e:	f1 f0       	breq	.+60     	; 0x36c <__mulsf3_pse+0xa0>
 330:	88 23       	and	r24, r24
 332:	4a f0       	brmi	.+18     	; 0x346 <__mulsf3_pse+0x7a>
 334:	ee 0f       	add	r30, r30
 336:	ff 1f       	adc	r31, r31
 338:	bb 1f       	adc	r27, r27
 33a:	66 1f       	adc	r22, r22
 33c:	77 1f       	adc	r23, r23
 33e:	88 1f       	adc	r24, r24
 340:	91 50       	subi	r25, 0x01	; 1
 342:	50 40       	sbci	r21, 0x00	; 0
 344:	a9 f7       	brne	.-22     	; 0x330 <__mulsf3_pse+0x64>
 346:	9e 3f       	cpi	r25, 0xFE	; 254
 348:	51 05       	cpc	r21, r1
 34a:	80 f0       	brcs	.+32     	; 0x36c <__mulsf3_pse+0xa0>
 34c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__fp_inf>
 350:	0c 94 4a 01 	jmp	0x294	; 0x294 <__fp_szero>
 354:	5f 3f       	cpi	r21, 0xFF	; 255
 356:	e4 f3       	brlt	.-8      	; 0x350 <__mulsf3_pse+0x84>
 358:	98 3e       	cpi	r25, 0xE8	; 232
 35a:	d4 f3       	brlt	.-12     	; 0x350 <__mulsf3_pse+0x84>
 35c:	86 95       	lsr	r24
 35e:	77 95       	ror	r23
 360:	67 95       	ror	r22
 362:	b7 95       	ror	r27
 364:	f7 95       	ror	r31
 366:	e7 95       	ror	r30
 368:	9f 5f       	subi	r25, 0xFF	; 255
 36a:	c1 f7       	brne	.-16     	; 0x35c <__mulsf3_pse+0x90>
 36c:	fe 2b       	or	r31, r30
 36e:	88 0f       	add	r24, r24
 370:	91 1d       	adc	r25, r1
 372:	96 95       	lsr	r25
 374:	87 95       	ror	r24
 376:	97 f9       	bld	r25, 7
 378:	08 95       	ret

0000037a <__fp_inf>:
 37a:	97 f9       	bld	r25, 7
 37c:	9f 67       	ori	r25, 0x7F	; 127
 37e:	80 e8       	ldi	r24, 0x80	; 128
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	08 95       	ret

00000386 <__fp_nan>:
 386:	9f ef       	ldi	r25, 0xFF	; 255
 388:	80 ec       	ldi	r24, 0xC0	; 192
 38a:	08 95       	ret

0000038c <__fp_pscA>:
 38c:	00 24       	eor	r0, r0
 38e:	0a 94       	dec	r0
 390:	16 16       	cp	r1, r22
 392:	17 06       	cpc	r1, r23
 394:	18 06       	cpc	r1, r24
 396:	09 06       	cpc	r0, r25
 398:	08 95       	ret

0000039a <__fp_pscB>:
 39a:	00 24       	eor	r0, r0
 39c:	0a 94       	dec	r0
 39e:	12 16       	cp	r1, r18
 3a0:	13 06       	cpc	r1, r19
 3a2:	14 06       	cpc	r1, r20
 3a4:	05 06       	cpc	r0, r21
 3a6:	08 95       	ret

000003a8 <__fp_round>:
 3a8:	09 2e       	mov	r0, r25
 3aa:	03 94       	inc	r0
 3ac:	00 0c       	add	r0, r0
 3ae:	11 f4       	brne	.+4      	; 0x3b4 <__fp_round+0xc>
 3b0:	88 23       	and	r24, r24
 3b2:	52 f0       	brmi	.+20     	; 0x3c8 <__fp_round+0x20>
 3b4:	bb 0f       	add	r27, r27
 3b6:	40 f4       	brcc	.+16     	; 0x3c8 <__fp_round+0x20>
 3b8:	bf 2b       	or	r27, r31
 3ba:	11 f4       	brne	.+4      	; 0x3c0 <__fp_round+0x18>
 3bc:	60 ff       	sbrs	r22, 0
 3be:	04 c0       	rjmp	.+8      	; 0x3c8 <__fp_round+0x20>
 3c0:	6f 5f       	subi	r22, 0xFF	; 255
 3c2:	7f 4f       	sbci	r23, 0xFF	; 255
 3c4:	8f 4f       	sbci	r24, 0xFF	; 255
 3c6:	9f 4f       	sbci	r25, 0xFF	; 255
 3c8:	08 95       	ret

000003ca <__itoa_ncheck>:
 3ca:	bb 27       	eor	r27, r27
 3cc:	4a 30       	cpi	r20, 0x0A	; 10
 3ce:	31 f4       	brne	.+12     	; 0x3dc <__itoa_ncheck+0x12>
 3d0:	99 23       	and	r25, r25
 3d2:	22 f4       	brpl	.+8      	; 0x3dc <__itoa_ncheck+0x12>
 3d4:	bd e2       	ldi	r27, 0x2D	; 45
 3d6:	90 95       	com	r25
 3d8:	81 95       	neg	r24
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__utoa_common>

000003e0 <__utoa_ncheck>:
 3e0:	bb 27       	eor	r27, r27

000003e2 <__utoa_common>:
 3e2:	fb 01       	movw	r30, r22
 3e4:	55 27       	eor	r21, r21
 3e6:	aa 27       	eor	r26, r26
 3e8:	88 0f       	add	r24, r24
 3ea:	99 1f       	adc	r25, r25
 3ec:	aa 1f       	adc	r26, r26
 3ee:	a4 17       	cp	r26, r20
 3f0:	10 f0       	brcs	.+4      	; 0x3f6 <__utoa_common+0x14>
 3f2:	a4 1b       	sub	r26, r20
 3f4:	83 95       	inc	r24
 3f6:	50 51       	subi	r21, 0x10	; 16
 3f8:	b9 f7       	brne	.-18     	; 0x3e8 <__utoa_common+0x6>
 3fa:	a0 5d       	subi	r26, 0xD0	; 208
 3fc:	aa 33       	cpi	r26, 0x3A	; 58
 3fe:	08 f0       	brcs	.+2      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 400:	a9 5d       	subi	r26, 0xD9	; 217
 402:	a1 93       	st	Z+, r26
 404:	00 97       	sbiw	r24, 0x00	; 0
 406:	79 f7       	brne	.-34     	; 0x3e6 <__utoa_common+0x4>
 408:	b1 11       	cpse	r27, r1
 40a:	b1 93       	st	Z+, r27
 40c:	11 92       	st	Z+, r1
 40e:	cb 01       	movw	r24, r22
 410:	0c 94 0a 02 	jmp	0x414	; 0x414 <strrev>

00000414 <strrev>:
 414:	dc 01       	movw	r26, r24
 416:	fc 01       	movw	r30, r24
 418:	67 2f       	mov	r22, r23
 41a:	71 91       	ld	r23, Z+
 41c:	77 23       	and	r23, r23
 41e:	e1 f7       	brne	.-8      	; 0x418 <strrev+0x4>
 420:	32 97       	sbiw	r30, 0x02	; 2
 422:	04 c0       	rjmp	.+8      	; 0x42c <strrev+0x18>
 424:	7c 91       	ld	r23, X
 426:	6d 93       	st	X+, r22
 428:	70 83       	st	Z, r23
 42a:	62 91       	ld	r22, -Z
 42c:	ae 17       	cp	r26, r30
 42e:	bf 07       	cpc	r27, r31
 430:	c8 f3       	brcs	.-14     	; 0x424 <strrev+0x10>
 432:	08 95       	ret

00000434 <_exit>:
 434:	f8 94       	cli

00000436 <__stop_program>:
 436:	ff cf       	rjmp	.-2      	; 0x436 <__stop_program>
